# Generated by Django 3.1.4 on 2021-05-08 16:30

import datetime
from django.db import migrations, models
import django.db.models.deletion
import properties.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('realtors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Properties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_category', models.CharField(choices=[('FEATURED', 'FEATURED'), ('OPPORTUNITY', 'OPPORTUNITY'), ('STANDARD', 'STANDARD')], default='STANDARD', max_length=25)),
                ('property_type', models.CharField(max_length=100)),
                ('advertised', models.CharField(choices=[('For_Sale', 'For Sale'), ('To_Rent', 'To Rent')], default='To_Rent', max_length=10)),
                ('description', models.TextField(max_length=2000)),
                ('short_description', models.TextField(default='', max_length=150)),
                ('available_after', models.DateField(default=datetime.datetime.now)),
                ('currency', models.CharField(choices=[('€', 'EUR(€)'), ('£', 'GBP(£)'), ('$', 'USD($)')], default='€', max_length=10)),
                ('price', models.IntegerField()),
                ('bedrooms', models.DecimalField(decimal_places=0, max_digits=2)),
                ('bathrooms', models.DecimalField(decimal_places=1, max_digits=2)),
                ('garage', models.IntegerField(default=0)),
                ('furniture', models.CharField(choices=[('Furnished', 'Furnished'), ('Unfurnished', 'Unfurnished')], default='Furnished', max_length=11)),
                ('m2', models.IntegerField()),
                ('photo_main', models.ImageField(upload_to='photos/%Y/%m/%d/', validators=[properties.validators.validate_file_size])),
                ('photo_1', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/', validators=[properties.validators.validate_file_size])),
                ('photo_2', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/', validators=[properties.validators.validate_file_size])),
                ('photo_3', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/', validators=[properties.validators.validate_file_size])),
                ('photo_4', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/', validators=[properties.validators.validate_file_size])),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('formatted_address', models.CharField(blank=True, max_length=600)),
                ('premise', models.CharField(blank=True, max_length=200)),
                ('street_number', models.CharField(blank=True, max_length=200)),
                ('route', models.CharField(blank=True, max_length=200)),
                ('political', models.CharField(blank=True, max_length=200)),
                ('locality', models.CharField(blank=True, max_length=200)),
                ('postal_town', models.CharField(blank=True, max_length=200)),
                ('neighborhood', models.CharField(blank=True, max_length=200)),
                ('administrative_area_level_1', models.CharField(blank=True, max_length=200)),
                ('administrative_area_level_2', models.CharField(blank=True, max_length=200)),
                ('administrative_area_level_3', models.CharField(blank=True, max_length=200)),
                ('administrative_area_level_4', models.CharField(blank=True, max_length=200)),
                ('administrative_area_level_5', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(max_length=100)),
                ('postalcode', models.CharField(max_length=20)),
                ('geo_lat', models.CharField(max_length=10)),
                ('geo_lng', models.CharField(max_length=10)),
                ('main_type', models.CharField(blank=True, max_length=200)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='realtors.agent')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realtors.organisation')),
            ],
        ),
    ]
